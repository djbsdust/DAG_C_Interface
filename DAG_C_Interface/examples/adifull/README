2d problem
   N*N mesh space
   6 loops
   phase1 loop i carries data dependences
   phse 2 loop j carries data dependences

six versions: serial/omp/dag-2d/dag/mdag/upch
   dag-2d: partitions two dimensions
   
   the other versions only partition one dim.
   dag: only one dag parallel region
        very complex data address mapping function.
   mdag: have niter*2 parallel regions
		simple
   upch: derived from dag version
		change macro varable names, avoiding conflict with UPC global variables.
-----------BUILD-----------------
How make 
   for upch
	 make upch  EXTRA_FLAGS='-DDIM_N=4096'
   for others:
     make serial EXTRA_FLAGS='-DN=4096'

----------RUN---------------------
How run
   ./adifull_dag niter blockx blocky num_threads
   ./adifull_serial niter blockx blocky  

---------TUNE PERFORMANCE-------------------
performance between dag and mdag
  very close to each other, less than 1% difference!
  for 4096*4096, 128*128, 40 iter
  mdag <total=10.12, exec_time=10.09>
  dag  <total=10.02, exec_time=9.99>

dag performance on tile shape
  this app has no neighbor dependence when using one-dim partitioning
  so it can vertical execution naturally, but only on very short loop sequence (3-loop)

  we choose one can fit into L2, so 128*128 is a good size!
  ./adifull_dag 40 128 128 8

omp tile shape
  128*128 is almost the best
  ./adifull_omp 40 128 128 8

